"use strict";(self.webpackChunkwebsitev_1=self.webpackChunkwebsitev_1||[]).push([[34],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>b});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=s(n),p=r,b=d["".concat(c,".").concat(p)]||d[p]||u[p]||a;return n?i.createElement(b,o(o({ref:t},g),{},{components:n})):i.createElement(b,o({ref:t},g))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={title:"CI:gitlab basic intro about  CI/CD, build image and push to git-lab container",description:"basic intro",authors:"suyuying",tags:["gitlab action","CICD"]},o=void 0,l={permalink:"/blog/2023/04/06/gitlab-action/gitlab-basic-intro-dind-build-image",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/gitlab-action/2023-04-06-gitlab-basic-intro-dind-build-image.md",source:"@site/blog/gitlab-action/2023-04-06-gitlab-basic-intro-dind-build-image.md",title:"CI:gitlab basic intro about  CI/CD, build image and push to git-lab container",description:"basic intro",date:"2023-04-06T00:00:00.000Z",formattedDate:"April 6, 2023",tags:[{label:"gitlab action",permalink:"/blog/tags/gitlab-action"},{label:"CICD",permalink:"/blog/tags/cicd"}],readingTime:1.695,hasTruncateMarker:!1,authors:[{name:"zaxro",title:"Life is too short to live someone else's dream",url:"https://github.com/suyuying",imageURL:"https://github.com/suyuying.png",key:"suyuying"}],frontMatter:{title:"CI:gitlab basic intro about  CI/CD, build image and push to git-lab container",description:"basic intro",authors:"suyuying",tags:["gitlab action","CICD"]},prevItem:{title:"difference between read_repository and read_registry in gitlab",permalink:"/blog/2023/04/07/gitlab-action/difference-between-read-repository-and-read-registry"},nextItem:{title:"Do Internet gateways and modem need to be used together?",permalink:"/blog/2023/03/30/Others/modemVSigw"}},c={authorsImageUrls:[void 0]},s=[{value:"basic example",id:"basic-example",level:2},{value:"basic tutorial",id:"basic-tutorial",level:2}],g={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"basic-example"},"basic example"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 docker:dind \u505a build image \u4e26 push \u5230 container registry \u7684 CI \u7bc4\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"stages:\n  - build-moni\n\nbefore_script:\n  - export COMMIT_TIME=$(date  +'%Y-%-m-%-d-%H-%M')\n\n\n# Build moni\nbuild-moni:\n  stage: build\n  image: docker:dind\n  tags:\n      - docker\n  before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n  script:\n      - docker build . -t $CI_IMAGE\n      - docker push $CI_IMAGE\n      - docker rmi $CI_IMAGE\n\n  except:\n      - schedules\n      - tags\n")),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u5728\u9810\u8a2d\u5de5\u4f5c\u5340\u57df\u5e95\u4e0b\uff0c\u57f7\u884c pip install \u4e26\u57f7\u884c\u4e3b\u7a0b\u5f0f\u5f8c\uff0c\u628a\u7522\u51fa\u5728 history \u7684\u6a94\u6848\u653e\u5230 artifact \u88e1\u9762\uff0c\u50b3\u7d66\u4e0b\u4e00\u968e\u7aef\u7684 addFinalCsvToGit,\u6709\u9650\u5b9a nginx-log/","*","\u6587\u4ef6\u8b8a\u52d5,\u4e14\u975e schedule \u6216 tags \u60c5\u6cc1\u624d\u6703\u57f7\u884c git \u6253 tag.\u5f8c\u4f86\u5728\u5beb\u9019\u7bc7\u6587\u767c\u73fe except \u53ef\u4ee5\u4e0d\u7528\u52a0,\u52a0\u4e86\u53cd\u800c\u6703\u8aa4\u5c0e."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'stages:\n  - runCode\n  - addFinalCsvToGit\n\nbefore_script:\n  - export COMMIT_TIME=$(date  +\'%Y-%-m-%-d-%H-%M\')\n\nrunCodeToTg:\n  stage: runCode\n  image:\n    name: python:3.11-slim\n  only:\n    changes:\n      - nginx-log/*\n  \x3c!-- except:\n    - schedules\n    - tags --\x3e\n\n  tags:\n    - docker\n\n  script:\n    - pip install --no-cache-dir -r ./requirment.txt\n    - python3 main.py\n    - ls history\n    - ls\n    - pwd\n  artifacts:\n    paths:\n      - history/\n\naddGitFile:\n  stage: addFinalCsvToGit\n  image:\n    name: alpine/git:latest\n    entrypoint: [""]\n  only:\n    changes:\n      - nginx-log/*\n  \x3c!-- except:\n      - schedules\n      - tags --\x3e\n  tags:\n    - docker\n  script:\n    - ls\n    - export\n    - pwd\n    - git config --global user.name "ford"\n    - git config --global user.email "ford"\n    - git add .\n    - git commit -m \'test\' || echo "No changes, nothing to commit!"\n    - git tag $COMMIT_TIME\n    - git push https://${ciname}:${cicode}@gitlab.go2cloudten.com/it/nginx-log-session-clear.git $COMMIT_TIME\n    - echo \'add file done\'\n\n  dependencies:\n    - runCodeToTg\n\n')),(0,r.kt)("p",null,"\u4ee5\u4e0a\u662f\u5de5\u4f5c\u904e\u7a0b\u4e2d\u6709\u4f7f\u7528\u5230\u7684\u7bc4\u4f8b,\u5f8c\u9762\u6703\u88dc\u5145\u4e0a\u9762\u7684\u7528\u6cd5,\u5982\u679c\u6709\u5beb\u932f\u6216\u53ef\u4ee5\u6539\u5584\u7684\u5730\u65b9\u4e5f\u6703\u4e00\u8d77\u4fee\u6539,\u4e26\u9644\u4e0a\u539f\u56e0."),(0,r.kt)("h2",{id:"basic-tutorial"},"basic tutorial"))}u.isMDXComponent=!0}}]);